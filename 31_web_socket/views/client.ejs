<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>간단 채팅 만들기(web socket)</title>
  </head>
  <body>
    <h4>간단 채팅방</h4>
    <h5>채팅 내용</h5>
    <ul></ul>

    <h5>채팅 입력</h5>
    <form id="chat">
      <label>이름 : <input type="text" id="name" /></label>
      <label>내용 : <input type="text" id="msg" /></label>
      <button>채팅 보내기</button>
    </form>

    <script>
      const socket = new WebSocket("ws://localhost:8080"); // 어디와 소통하는지
      console.log(socket);

      const msg = document.querySelector("#msg"); //채팅내용input
      const name = document.querySelector("#name"); // 이름 input
      const chatForm = document.querySelector("#chat");
      const ul = document.querySelector("ul");

      /*
      websocket 이벤트
      - open : 웹소켓이 성공적으로 열렸을 때
      - message: 웹소켓으로 데이터를 주고 받을 때
      - error : 웹소켓 연결 중 오류가 발생했을 때
      - close: 웹소켓 연결이 종료되었을 때
      */

      // 웹소켓이 성공적으로 열렸을 떄 (서버와 연결)
      socket.addEventListener("open", (e) => {
        console.log("서버에 연결되었습니다.!");
        // console.log("e", e);  //WebSocket
        // socket.send("채팅방 입장~!"); // 서버에게 메세지 보냄(서버콘솔에 찍힘)
      });

      // 웹소켓으로 데이터 주고 받는 이벤트
      socket.addEventListener("message", (e) => {
        console.log("서버로부터 받은 메세지", e.data); //json
        const li = document.createElement("li");
        const data = JSON.parse(e.data); // json >> object
        console.log("객체로 변환 ", data);
        li.textContent = `${data.name} : ${data.msg}`;
        ul.append(li);
      });

      // 채팅 내용을 서버에 전송
      chatForm.addEventListener("submit", (e) => {
        e.preventDefault();

        const chatData = { msg: msg.value, name: name.value };
        console.log("chatData", chatData); // 객체
        //server에 데이터(객체) 보낼때 string(json)으로 변경해서 보내야 함
        socket.send(JSON.stringify(chatData));

        msg.value = "";
        name.value = "";
      });
    </script>
  </body>
</html>
