<!DOCTYPE html>
<html lang="ko">
  <%- include('include/include', { title: '회원 정보' })%>
  <body>
    <h1>회원 정보</h1>
    <!-- TODO: href 속성값 설정하기 -->
    <a href="/user">HOME</a>
    <p>ID 수정 불가능, Password, Name 수정 가능</p>

    <!-- TODO: 각 input의 value 값을 로그인 한 사람의 정보로 채우기 -->
    <form name="form_profile">
      <label for="userid">ID</label>
      <input type="hidden" id="id" value="<%=userdata.userid %>" />
      <!-- readonly: userid는 수정 불가능 (조건임) -->
      <input
        id="userid"
        type="text"
        name="userid"
        value="<%=userdata.userid %>"
        readonly
      />
      <br />
      <label for="password">Password</label>
      <input
        id="password"
        type="password"
        name="pw"
        value="<%=userdata.pw%>"
        required
      /><br />
      <label for="name">Name</label>
      <input
        id="name"
        type="text"
        name="name"
        value="<%=userdata.name %>"
        required
      /><br />
      <button type="button" onclick="profileEdit();">Edit</button>
      <button type="button" onclick="profileDelete();">Delete</button>
    </form>

    <script>
      // TODO: [Login] 버튼 클릭시 서버에 회원 정보 수정 요청하기
      // POST /user/profile/edit
      function profileEdit() {
        const form = document.forms["form_profile"];
        if (form.password.value.length === 0 || form.name.value.length === 0) {
          alert("비밀번호와 이름을 모두 기입해주세요");
          return;
        }
        if (form.password.value.length > 10) {
          alert("비밀번호는 10글자 미만으로 작성해주세요~");
          return;
        }
        if (form.name.value.length > 20) {
          alert("이름은 20글자 미만으로 작성해주세요~");
          return;
        }

        axios({
          method: "patch",
          url: "/user/profile/edit",
          data: {
            id: form.id.value,
            password: form.password.value,
            name: form.name.value,
          },
        }).then((res) => {
          console.log("ejs", res.data);
          if (res.data.success) {
            alert("정보 수정 성공");
          }
        });
      }

      // TODO: [Login] 버튼 클릭시 서버에 회원 정보 삭제 요청하기
      // POST /user/profile/delete
      function profileDelete() {
        const form = document.forms["form_profile"];
        axios({
          method: "delete",
          url: "/user/profile/delete",
          data: {
            userid: form.userid.value,
          },
        })
          .then((res) => {
            if (res.data.success) {
              alert("회원탈퇴성공");
              document.location.href = "/user";
            }
          })
          .catch((err) => {
            console.error(err);
          });
      }
    </script>
  </body>
</html>
