/* transiton vs animation 
 - transition
   -자연스러운 변경을 위해 설정
   -hover, onclick 등 동작이 발생되었을 때

 -animation 
  -중간 step 등을 지정을 해 보다 세밀한 스타일 전환 가능 
  -keyframes로 이루어짐 
  -   단축 속성 순서 네임과 디렉션 필수 
  - animation: name duration timing-function delay iteration-count direction 
  - animation-name - keyframes로 만들어짐 애니 이름
  - animation-duration :  한 사이클의 애니 어떤 시간 간격 동안 진행 설정 단위 s
  - animation-timing-function : 중간 상태의 전환을 어떤 시간 간격을 진행할지  
     linear, ease, ease-in, ease-in-out , ease-out
  - animation-delay: 애니 시작 지연 defai 0s
  - animation-ineration-count: 애니메이샨 반복 횟수 디폴트 1
  - animation-direction : 반복될 때 진행 반향 설정 디폴트:normal
*/

.box{
    width: 100px;
    height: 100px;
    background-color: gray;
    position: relative;
    animation: my-ani;
    animation-duration: 2s;
    animation-delay: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  
}
/* box 애니 */
@keyframes my-ani{
    0%{
        left: 0px;
    }
    25%{
        left: 200px;
    }
    50%{
        left: 400px;
    }
    75%{
        left:200px;
    }
    100%{
        left:100px
    }
}

.bounce-ball1{
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: hotpink;
    position: absolute;
    top: 0px;
    left: 250px;
    /* 공이 떨어질때는 
       빠른 -> 느림 
    공이 튀어 오를 때
       느림 ->빠름 
       */
       /* 빨랐다 느려지는  */
       animation: bounce1 1s ease-out 4 alternate;

       /* normal: from > to, from > to
       alternate: from > to, to < from  */



}

@keyframes bounce1{
    from{
        top: 300px;
    }
    to{
        top: 0px;
    }

}

.bounce-ball2{
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: black;
    position: absolute;
    bottom: 0;

    animation: bounce2 2s infinite;
}

@keyframes bounce2{
    from, to{
       bottom: 0;
       width: 55px;
       /* 천천히 속도 줄임 */
       animation-timing-function: ease-out;
    }

    50%{
        width: 50px;
        bottom: 300px;
        /* 속도가 빨라지도록  */
        animation-timing-function: ease-in;
    }
}