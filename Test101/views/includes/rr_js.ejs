<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <p>지티 물</p>
  </body>
</html>
<!-- 이전 링크 스크립트  -->

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const pw1 = document.getElementById("userpw1"); // 패스워드 입력 필드
    const pw2 = document.getElementById("userpw2"); // 패스워드 확인 필드
    const check1 = document.querySelector(".check1"); // userpw1의 span
    const check2 = document.querySelector(".check2"); // userpw2의 span
    const idCheckButton = document.querySelector(".useridB"); // 아이디 확인 버튼
    const idP = document.querySelector(".idP"); // 아이디 중복 확인 메시지
    const registerButton = document.querySelector(".registerB"); // 가입 버튼
    let isIdChecked = false; // 아이디 중복 확인 상태 변수

    // 비밀번호 유효성 검사 정규식
    const regPw =
      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$])[A-Za-z\d!@#$]{5,15}$/;

    // 비밀번호 유효성 검사 및 일치 여부 확인 함수
    function valiPw() {
      const isPw1Vali = regPw.test(pw1.value); // userpw1 유효성 검사
      const isPwMatch = pw1.value === pw2.value && pw1.value !== ""; // 비밀번호 일치 여부
      const pwP = document.querySelector(".pwP");

      if (isPw1Vali) {
        check1.style.display = "block"; // 유효한 경우
        pwP.innerText = "영문 소/대문자, 숫자, !@#$ 포함 5 ~ 15자";
        pwP.style.color = "rgba(160, 160, 160, 1)";
      } else {
        check1.style.display = "none"; // 유효하지 않은 경우
        pwP.innerText =
          "비밀번호는 영문 소/대문자, 숫자, !@#$ 포함 5 ~ 15자여야 합니다.";
        pwP.style.color = "red";
      }

      if (isPw1Vali && isPwMatch) {
        check2.style.display = "block"; // 일치하는 경우
      } else {
        check2.style.display = "none"; // 일치하지 않는 경우
      }
    }

    pw1.addEventListener("input", valiPw); // userpw1에서 입력 이벤트 발생 시 검사
    pw2.addEventListener("input", valiPw); // userpw2에서 입력 이벤트 발생 시 검사

    // 아이디 중복 확인 AJAX 요청
    idCheckButton.addEventListener("click", () => {
      const form = document.forms["register"];
      const inputId = form.userid.value.trim();

      if (inputId === "") {
        idP.innerText = "아이디를 입력해주세요";
        idP.style.color = "red";
        return;
      }

      const reg = /^(?=.*[a-z])(?=.*\d)[A-Za-z\d]{5,12}$/; // 정규식
      if (!reg.test(inputId)) {
        idP.innerText =
          "아이디는 영문 소문자, 숫자를 포함한 5 ~ 12여야 합니다.";
        idP.style.color = "red";
        return;
      }

      $.ajax({
        type: "post",
        url: "/registerIdCheck",
        data: { userid: inputId },
        success: function (res) {
          if (res.success) {
            idP.innerText = "사용 가능한 아이디입니다.";
            idP.style.color = "green";
            form.userid.readOnly = true; // 확인된 아이디 고정
            isIdChecked = true; // 아이디 중복 확인 완료
          } else {
            idP.innerText = "이미 사용 중인 아이디입니다.";
            idP.style.color = "red";
          }
        },
        error: function (error) {
          console.log(error);
        },
      });
    });

    // 회원가입 AJAX 요청
    registerButton.addEventListener("click", (event) => {
      event.preventDefault(); // 기본 폼 제출 방지

      const form = document.forms["register"];
      const userid = form.userid.value.trim();
      const userpw1 = form.userpw1.value;
      const userpw2 = form.userpw2.value;
      const username = form.username.value.trim();
      const userbirth = form.userbirth.value;

      if (!isIdChecked) {
        alert("아이디 중복 확인을 해주세요.");
        return false;
      }

      if (
        userid === "" ||
        userpw1 === "" ||
        userpw2 === "" ||
        username === "" ||
        userbirth === ""
      ) {
        alert("모든 항목을 입력해주세요.");
        return false;
      }

      if (!regPw.test(userpw1)) {
        alert(
          "비밀번호는 영문 소/대문자, 숫자, !@#$ 포함 5 ~ 15자여야 합니다."
        );
        return false;
      }

      if (userpw1 !== userpw2) {
        alert("비밀번호가 일치하지 않습니다.");
        return false;
      }

      // 폼 데이터를 서버로 전송
      $.ajax({
        type: "post",
        url: "/users/register",
        data: {
          userid: userid,
          userpw: userpw1,
          username: username,
          userbirth: userbirth,
        },
        success: function (res) {
          if (res.success) {
            alert("회원가입이 완료되었습니다.");
            window.location.href = "/login"; // 로그인 페이지로 이동
          } else {
            alert("회원가입에 실패했습니다. 다시 시도해주세요.");
          }
        },
        error: function (error) {
          console.log(error);
          alert("회원가입 중 오류가 발생했습니다.");
        },
      });
    });
  });
</script>
